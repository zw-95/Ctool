# 构建发布平台适配文件
name: release-ctool-adapter
on:
    push:
        tags:
            - "v*.*.*"
    workflow_dispatch:

jobs:
    base:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Use Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 16

            - uses: pnpm/action-setup@v2
              name: Install pnpm
              id: pnpm-install
              with:
                  version: 8
                  run_install: false

            - name: Get pnpm store directory
              id: pnpm-cache
              shell: bash
              run: |
                  echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

            - uses: actions/cache@v3
              name: Setup pnpm cache
              with:
                  path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-

            - name: Install dependencies
              run: |
                  pnpm install
                  sudo apt-get update
                  sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf
                  sudo dpkg --add-architecture i386
                  wget -qO - https://dl.winehq.org/wine-builds/winehq.key | sudo apt-key add -
                  sudo add-apt-repository ppa:cybermax-dexter/sdl2-backport
                  sudo apt-add-repository "deb https://dl.winehq.org/wine-builds/ubuntu $(lsb_release -cs) main"
                  sudo apt install --install-recommends winehq-stable

            - name: Install Rust stable
              uses: dtolnay/rust-toolchain@stable

            # Rust cache
            - uses: Swatinem/rust-cache@v2

            - name: Checkout Dist File
              uses: actions/checkout@v3
              with:
                  path: packages/ctool-core/dist
                  ref: gh-pages

            - name: Release Adapter Platform
              run: |
                  pnpm run initialize
                  ls -lha packages/ctool-core/dist
                  node release.cjs clear
                  node release.cjs init
                  pnpm run only-release
                  ls -lh ./_release/
                  node release.cjs get

            - name: Get Release Files
              uses: edwardgeorge/file-outputs-action@main
              id: get_release_files
              with:
                  files: files=_release_files

            - name: Upload Release To Github
              uses: softprops/action-gh-release@v1
              with:
                  prerelease: true
                  files: |
                      ${{ steps.get_release_files.outputs.files }}

    tauri-mac-window:
        needs: base
        strategy:
            fail-fast: false
            matrix:
                platform: [macos-latest, windows-latest]

        runs-on: ${{ matrix.platform }}

        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Use Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 16

            - uses: pnpm/action-setup@v2
              name: Install pnpm
              id: pnpm-install
              with:
                  version: 8
                  run_install: false

            - name: Get pnpm store directory
              id: pnpm-cache
              shell: bash
              run: |
                  echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

            - uses: actions/cache@v3
              name: Setup pnpm cache
              with:
                  path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-

            - name: Install dependencies
              run: pnpm install

            - name: Install Rust stable
              uses: dtolnay/rust-toolchain@stable

            # Rust cache
            - uses: Swatinem/rust-cache@v2

            - name: Checkout Dist File
              uses: actions/checkout@v3
              with:
                  path: packages/ctool-core/dist
                  ref: gh-pages

            - name: Release Adapter Platform
              run: |
                  pnpm run initialize
                  ls packages/ctool-core/dist
                  node release.cjs clear
                  node release.cjs init
                  pnpm --filter ctool-adapter-tauri run platform-release
                  ls ./_release/
                  node release.cjs get

            - name: Get Release Files
              uses: edwardgeorge/file-outputs-action@main
              id: get_release_files
              with:
                  files: files=_release_files

            - name: Upload Release To Github
              uses: softprops/action-gh-release@v1
              with:
                  prerelease: true
                  files: |
                      ${{ steps.get_release_files.outputs.files }}
